// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String
  userName      String    @unique
  email         String?   @unique
  emailVerified DateTime?
  phone         String?   @unique
  phoneVerified DateTime? @default(now())
  image         String?
  password      String?
  isShopOwner   Boolean   @default(false)
  activeSession Boolean   @default(false)
  shops         Shop[]
  reviews       Review[]
}

model Shop {
  id        String    @id @default(cuid())
  userId    String //reference to userId
  createdAt DateTime  @default(now())
  title     String
  desc      String
  img       String?
  slug      String    @unique
  verified  Boolean
  address   String
  user      User      @relation(fields: [userId], references: [id])
  products  Product[]
  orders    Order[]
}

model Order {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  price     Decimal
  status    String
  intent_id String?   @unique
  userId    String
  shopId    String // Reference from shop
  shop      Shop      @relation(fields: [shopId], references: [id])
  products  Product[] // @relation("OrderToProduct")
}

model Product {
  id         String   @id @default(cuid())
  createdAt  DateTime @default(now())
  title      String
  desc       String
  img        String?
  price      Decimal
  rating     Decimal?
  isFeatured Boolean  @default(false)
  options    Json[] // Title and additional price
  shopId     String // Reference from shop
  shop       Shop     @relation(fields: [shopId], references: [id])
  reviews    Review[]
  //orders     Order[]  @relation("OrderToProduct") // Reference to orders
  Order      Order?   @relation(fields: [orderId], references: [id])
  orderId    String?
}

model Review {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  productId String //reference from product
  userId    String //reference from user
  comment   String
  user      User     @relation(fields: [userId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}
